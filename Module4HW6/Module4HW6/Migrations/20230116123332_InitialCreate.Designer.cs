// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module4HW6;

#nullable disable

namespace Module4HW6.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230116123332_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module4HW6.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1998, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "test_artist_name1"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1986, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "test_artist_name2"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2002, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "test_artist_name3"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1981, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "test_artist_name4"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1999, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "test_artist_name5"
                        });
                });

            modelBuilder.Entity("Module4HW6.Entities.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSong", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            SongId = 1
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            SongId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            SongId = 3
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            SongId = 3
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 3,
                            SongId = 4
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 1,
                            SongId = 5
                        });
                });

            modelBuilder.Entity("Module4HW6.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "test_genre1"
                        },
                        new
                        {
                            Id = 2,
                            Title = "test_genre2"
                        },
                        new
                        {
                            Id = 3,
                            Title = "test_genre3"
                        },
                        new
                        {
                            Id = 4,
                            Title = "test_genre4"
                        },
                        new
                        {
                            Id = 5,
                            Title = "test_genre5"
                        });
                });

            modelBuilder.Entity("Module4HW6.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 0, 3, 24, 0),
                            GenreId = 3,
                            ReleasedDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "test_song_name1"
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 0, 2, 51, 0),
                            GenreId = 2,
                            ReleasedDate = new DateTime(2022, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "test_song_name2"
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 0, 2, 36, 0),
                            GenreId = 5,
                            ReleasedDate = new DateTime(2022, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "test_song_name3"
                        },
                        new
                        {
                            Id = 4,
                            Duration = new TimeSpan(0, 0, 3, 44, 0),
                            GenreId = 4,
                            ReleasedDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "test_song_name4"
                        },
                        new
                        {
                            Id = 5,
                            Duration = new TimeSpan(0, 0, 3, 11, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(2022, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "test_song_name5"
                        });
                });

            modelBuilder.Entity("Module4HW6.Entities.ArtistSong", b =>
                {
                    b.HasOne("Module4HW6.Entities.Artist", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module4HW6.Entities.Song", "Song")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Module4HW6.Entities.Song", b =>
                {
                    b.HasOne("Module4HW6.Entities.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Module4HW6.Entities.Artist", b =>
                {
                    b.Navigation("ArtistSongs");
                });

            modelBuilder.Entity("Module4HW6.Entities.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Module4HW6.Entities.Song", b =>
                {
                    b.Navigation("ArtistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
